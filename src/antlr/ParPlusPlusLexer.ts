// Generated from src/antlr/ParPlusPlus.g4 by ANTLR 4.7.3-SNAPSHOT
// @ts-nocheck

import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ParPlusPlusLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly WHITESPACE = 40;
	public static readonly ID = 41;
	public static readonly FLOAT_VAL = 42;
	public static readonly INT_VAL = 43;
	public static readonly CHAR_VAL = 44;
	public static readonly STR_VAL = 45;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "WHITESPACE", "ID", 
		"FLOAT_VAL", "INT_VAL", "CHAR_VAL", "STR_VAL",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'program'", "';'", "'var'", "'['", "']'", "','", "'int'", 
		"'float'", "'char'", "'void'", "'module'", "'('", "')'", "'{'", "'}'", 
		"'='", "'return'", "'if'", "'then'", "'else'", "'while'", "'do'", "'for'", 
		"'to'", "'>'", "'<'", "'<='", "'>='", "'=='", "'!='", "'+'", "'-'", "'*'", 
		"'/'", "'|'", "'&'", "'read'", "'write'", "'main()'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "WHITESPACE", "ID", 
		"FLOAT_VAL", "INT_VAL", "CHAR_VAL", "STR_VAL",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ParPlusPlusLexer._LITERAL_NAMES, ParPlusPlusLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ParPlusPlusLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ParPlusPlusLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "ParPlusPlus.g4"; }

	// @Override
	public get ruleNames(): string[] { return ParPlusPlusLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ParPlusPlusLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ParPlusPlusLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ParPlusPlusLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02/\u0111\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03" +
		"\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03" +
		"\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03!\x03" +
		"!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03" +
		"\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03" +
		")\x03)\x03)\x03)\x03*\x03*\x07*\xEF\n*\f*\x0E*\xF2\v*\x03+\x07+\xF5\n" +
		"+\f+\x0E+\xF8\v+\x03+\x03+\x06+\xFC\n+\r+\x0E+\xFD\x03,\x06,\u0101\n," +
		"\r,\x0E,\u0102\x03-\x03-\x03-\x03-\x03.\x03.\x07.\u010B\n.\f.\x0E.\u010E" +
		"\v.\x03.\x03.\x03\u010C\x02\x02/\x03\x02\x03\x05\x02\x04\x07\x02\x05\t" +
		"\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
		"\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02" +
		"$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/\x03" +
		"\x02\x07\x05\x02\v\f\x0F\x0F\"\"\x04\x02C\\c|\x05\x022;C\\c|\x03\x022" +
		";\x03\x02\"\x80\x02\u0115\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02" +
		"[\x03\x02\x02\x02\x03]\x03\x02\x02\x02\x05e\x03\x02\x02\x02\x07g\x03\x02" +
		"\x02\x02\tk\x03\x02\x02\x02\vm\x03\x02\x02\x02\ro\x03\x02\x02\x02\x0F" +
		"q\x03\x02\x02\x02\x11u\x03\x02\x02\x02\x13{\x03\x02\x02\x02\x15\x80\x03" +
		"\x02\x02\x02\x17\x85\x03\x02\x02\x02\x19\x8C\x03\x02\x02\x02\x1B\x8E\x03" +
		"\x02\x02\x02\x1D\x90\x03\x02\x02\x02\x1F\x92\x03\x02\x02\x02!\x94\x03" +
		"\x02\x02\x02#\x96\x03\x02\x02\x02%\x9D\x03\x02\x02\x02\'\xA0\x03\x02\x02" +
		"\x02)\xA5\x03\x02\x02\x02+\xAA\x03\x02\x02\x02-\xB0\x03\x02\x02\x02/\xB3" +
		"\x03\x02\x02\x021\xB7\x03\x02\x02\x023\xBA\x03\x02\x02\x025\xBC\x03\x02" +
		"\x02\x027\xBE\x03\x02\x02\x029\xC1\x03\x02\x02\x02;\xC4\x03\x02\x02\x02" +
		"=\xC7\x03\x02\x02\x02?\xCA\x03\x02\x02\x02A\xCC\x03\x02\x02\x02C\xCE\x03" +
		"\x02\x02\x02E\xD0\x03\x02\x02\x02G\xD2\x03\x02\x02\x02I\xD4\x03\x02\x02" +
		"\x02K\xD6\x03\x02\x02\x02M\xDB\x03\x02\x02\x02O\xE1\x03\x02\x02\x02Q\xE8" +
		"\x03\x02\x02\x02S\xEC\x03\x02\x02\x02U\xF6\x03\x02\x02\x02W\u0100\x03" +
		"\x02\x02\x02Y\u0104\x03\x02\x02\x02[\u0108\x03\x02\x02\x02]^\x07r\x02" +
		"\x02^_\x07t\x02\x02_`\x07q\x02\x02`a\x07i\x02\x02ab\x07t\x02\x02bc\x07" +
		"c\x02\x02cd\x07o\x02\x02d\x04\x03\x02\x02\x02ef\x07=\x02\x02f\x06\x03" +
		"\x02\x02\x02gh\x07x\x02\x02hi\x07c\x02\x02ij\x07t\x02\x02j\b\x03\x02\x02" +
		"\x02kl\x07]\x02\x02l\n\x03\x02\x02\x02mn\x07_\x02\x02n\f\x03\x02\x02\x02" +
		"op\x07.\x02\x02p\x0E\x03\x02\x02\x02qr\x07k\x02\x02rs\x07p\x02\x02st\x07" +
		"v\x02\x02t\x10\x03\x02\x02\x02uv\x07h\x02\x02vw\x07n\x02\x02wx\x07q\x02" +
		"\x02xy\x07c\x02\x02yz\x07v\x02\x02z\x12\x03\x02\x02\x02{|\x07e\x02\x02" +
		"|}\x07j\x02\x02}~\x07c\x02\x02~\x7F\x07t\x02\x02\x7F\x14\x03\x02\x02\x02" +
		"\x80\x81\x07x\x02\x02\x81\x82\x07q\x02\x02\x82\x83\x07k\x02\x02\x83\x84" +
		"\x07f\x02\x02\x84\x16\x03\x02\x02\x02\x85\x86\x07o\x02\x02\x86\x87\x07" +
		"q\x02\x02\x87\x88\x07f\x02\x02\x88\x89\x07w\x02\x02\x89\x8A\x07n\x02\x02" +
		"\x8A\x8B\x07g\x02\x02\x8B\x18\x03\x02\x02\x02\x8C\x8D\x07*\x02\x02\x8D" +
		"\x1A\x03\x02\x02\x02\x8E\x8F\x07+\x02\x02\x8F\x1C\x03\x02\x02\x02\x90" +
		"\x91\x07}\x02\x02\x91\x1E\x03\x02\x02\x02\x92\x93\x07\x7F\x02\x02\x93" +
		" \x03\x02\x02\x02\x94\x95\x07?\x02\x02\x95\"\x03\x02\x02\x02\x96\x97\x07" +
		"t\x02\x02\x97\x98\x07g\x02\x02\x98\x99\x07v\x02\x02\x99\x9A\x07w\x02\x02" +
		"\x9A\x9B\x07t\x02\x02\x9B\x9C\x07p\x02\x02\x9C$\x03\x02\x02\x02\x9D\x9E" +
		"\x07k\x02\x02\x9E\x9F\x07h\x02\x02\x9F&\x03\x02\x02\x02\xA0\xA1\x07v\x02" +
		"\x02\xA1\xA2\x07j\x02\x02\xA2\xA3\x07g\x02\x02\xA3\xA4\x07p\x02\x02\xA4" +
		"(\x03\x02\x02\x02\xA5\xA6\x07g\x02\x02\xA6\xA7\x07n\x02\x02\xA7\xA8\x07" +
		"u\x02\x02\xA8\xA9\x07g\x02\x02\xA9*\x03\x02\x02\x02\xAA\xAB\x07y\x02\x02" +
		"\xAB\xAC\x07j\x02\x02\xAC\xAD\x07k\x02\x02\xAD\xAE\x07n\x02\x02\xAE\xAF" +
		"\x07g\x02\x02\xAF,\x03\x02\x02\x02\xB0\xB1\x07f\x02\x02\xB1\xB2\x07q\x02" +
		"\x02\xB2.\x03\x02\x02\x02\xB3\xB4\x07h\x02\x02\xB4\xB5\x07q\x02\x02\xB5" +
		"\xB6\x07t\x02\x02\xB60\x03\x02\x02\x02\xB7\xB8\x07v\x02\x02\xB8\xB9\x07" +
		"q\x02\x02\xB92\x03\x02\x02\x02\xBA\xBB\x07@\x02\x02\xBB4\x03\x02\x02\x02" +
		"\xBC\xBD\x07>\x02\x02\xBD6\x03\x02\x02\x02\xBE\xBF\x07>\x02\x02\xBF\xC0" +
		"\x07?\x02\x02\xC08\x03\x02\x02\x02\xC1\xC2\x07@\x02\x02\xC2\xC3\x07?\x02" +
		"\x02\xC3:\x03\x02\x02\x02\xC4\xC5\x07?\x02\x02\xC5\xC6\x07?\x02\x02\xC6" +
		"<\x03\x02\x02\x02\xC7\xC8\x07#\x02\x02\xC8\xC9\x07?\x02\x02\xC9>\x03\x02" +
		"\x02\x02\xCA\xCB\x07-\x02\x02\xCB@\x03\x02\x02\x02\xCC\xCD\x07/\x02\x02" +
		"\xCDB\x03\x02\x02\x02\xCE\xCF\x07,\x02\x02\xCFD\x03\x02\x02\x02\xD0\xD1" +
		"\x071\x02\x02\xD1F\x03\x02\x02\x02\xD2\xD3\x07~\x02\x02\xD3H\x03\x02\x02" +
		"\x02\xD4\xD5\x07(\x02\x02\xD5J\x03\x02\x02\x02\xD6\xD7\x07t\x02\x02\xD7" +
		"\xD8\x07g\x02\x02\xD8\xD9\x07c\x02\x02\xD9\xDA\x07f\x02\x02\xDAL\x03\x02" +
		"\x02\x02\xDB\xDC\x07y\x02\x02\xDC\xDD\x07t\x02\x02\xDD\xDE\x07k\x02\x02" +
		"\xDE\xDF\x07v\x02\x02\xDF\xE0\x07g\x02\x02\xE0N\x03\x02\x02\x02\xE1\xE2" +
		"\x07o\x02\x02\xE2\xE3\x07c\x02\x02\xE3\xE4\x07k\x02\x02\xE4\xE5\x07p\x02" +
		"\x02\xE5\xE6\x07*\x02\x02\xE6\xE7\x07+\x02\x02\xE7P\x03\x02\x02\x02\xE8" +
		"\xE9\t\x02\x02\x02\xE9\xEA\x03\x02\x02\x02\xEA\xEB\b)\x02\x02\xEBR\x03" +
		"\x02\x02\x02\xEC\xF0\t\x03\x02\x02\xED\xEF\t\x04\x02\x02\xEE\xED\x03\x02" +
		"\x02\x02\xEF\xF2\x03\x02\x02\x02\xF0\xEE\x03\x02\x02\x02\xF0\xF1\x03\x02" +
		"\x02\x02\xF1T\x03\x02\x02\x02\xF2\xF0\x03\x02\x02\x02\xF3\xF5\t\x05\x02" +
		"\x02\xF4\xF3\x03\x02\x02\x02\xF5\xF8\x03\x02\x02\x02\xF6\xF4\x03\x02\x02" +
		"\x02\xF6\xF7\x03\x02\x02\x02\xF7\xF9\x03\x02\x02\x02\xF8\xF6\x03\x02\x02" +
		"\x02\xF9\xFB\x070\x02\x02\xFA\xFC\t\x05\x02\x02\xFB\xFA\x03\x02\x02\x02" +
		"\xFC\xFD\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02" +
		"\xFEV\x03\x02\x02\x02\xFF\u0101\t\x05\x02\x02\u0100\xFF\x03\x02\x02\x02" +
		"\u0101\u0102\x03\x02\x02\x02\u0102\u0100\x03\x02\x02\x02\u0102\u0103\x03" +
		"\x02\x02\x02\u0103X\x03\x02\x02\x02\u0104\u0105\x07)\x02\x02\u0105\u0106" +
		"\t\x06\x02\x02\u0106\u0107\x07)\x02\x02\u0107Z\x03\x02\x02\x02\u0108\u010C" +
		"\x07$\x02\x02\u0109\u010B\v\x02\x02\x02\u010A\u0109\x03\x02\x02\x02\u010B" +
		"\u010E\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010C\u010A\x03\x02" +
		"\x02\x02\u010D\u010F\x03\x02\x02\x02\u010E\u010C\x03\x02\x02\x02\u010F" +
		"\u0110\x07$\x02\x02\u0110\\\x03\x02\x02\x02\b\x02\xF0\xF6\xFD\u0102\u010C" +
		"\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ParPlusPlusLexer.__ATN) {
			ParPlusPlusLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ParPlusPlusLexer._serializedATN));
		}

		return ParPlusPlusLexer.__ATN;
	}

}

